//! Trap 功能处理
//!
//! 对于rCore而言，我们有一个单一的trap入口点，即`__alltraps`。在[`init()`]初始化时，我们将`stvec`控制状态寄存器（CSR）设置为指向它。
//! 所有陷阱都会经过`__alltraps`，它定义在`trap.S`中。这段汇编语言代码仅完成足够的工作来恢复内核空间上下文，确保Rust代码能够安全运行，并将控制权转移到[`trap_handler()`]。
//! 然后，它会根据具体的异常类型调用不同的功能。例如，定时器中断会触发任务抢占，而系统调用会转到[`syscall()`]。

mod context;
